Conceitos:

*Data binding ou "Associação de dados"--> O Data binding implica em uma associação de dados com uma fonte de dados que, no nosso caso, está no componente, com seu template (nomenclatura do Angular), ou view.
	*Suga os dados que estão no componente para a view.
	*Verifica se existe a propriedade

*One way data binding ("data binding unidirecional"), isto porque os dados saem do componente, da fonte de dados, e vão para o template, no entanto não fazem o caminho contrário, e é importante frisarmos isto.

**Todos componentes criados precisam ser declarados no app.module.ts 
declarations: [Compoentes...]

*Estrutura imports
	*Primeiro os imports do Angular
	(Espaço)
	*Nossos imports
	
*Inbound properties: passando dados para o componente (Contrário do Data binding, pois no data binding ele faz referência a propriedade do compoente (Lê o atríbuto). No inbound, ele passa o valor diretamente)
	@Input --> Comando

*Pipes -> Aprendemos que Pipes ("tubos", em português) podem gerar transformações nos dados, e que podemos criar os nossos.
	Usados para formatação dos dados (Strings: Data, dinheiros e outros)

*Resolvers -> a resolução de dados assíncronos dos quais o componente depende antes de ser ativado, no momento em que ativamos a rota, antes mesmo dela avaliar tal componente

* Lettable operators no RxJS

* Spread Operator