apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    name: mysql
  clusterIP: None
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql # has to match .spec.template.metadata.labels
  serviceName: "mysql"
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mysql # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: mysql:8
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_DATABASE # Notice that the case is different here
                                     # from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: dados           # The ConfigMap this value comes from.
              key: DB_DATABASE # The key to fetch.
        - name: MYSQL_ROOT_PASSWORD # Notice that the case is different here
                                     # from the key name in the ConfigMap.
          valueFrom:
            secretKeyRef:
              name: senhas           # The ConfigMap this value comes from.
              key: DB_PASSWORD # The key to fetch.
        volumeMounts:
        - name: mysql-ps
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-ps
        persistentVolumeClaim:
          claimName: volume-mysql
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-mysql
spec:
  schedule: "0 3 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: mysqldump
            image: leonardosartorello/mysqldump:v4
            env:
            # Define the environment variable
            - name: MYSQL_ENV_DB_HOST # Notice that the case is different here
                                        # from the key name in the ConfigMap.
              valueFrom:
                configMapKeyRef:
                  name: dados           # The ConfigMap this value comes from.
                  key: DB_HOST # The key to fetch.
            - name: MYSQL_ENV_DB_PASS # Notice that the case is different here
                                        # from the key name in the ConfigMap.
              valueFrom:
                secretKeyRef:
                  name: senhas           # The ConfigMap this value comes from.
                  key: DB_PASSWORD # The key to fetch.
            - name: MYSQL_ENV_DB_USER # Notice that the case is different here
                                        # from the key name in the ConfigMap.
              valueFrom:
                secretKeyRef:
                  name: senhas           # The ConfigMap this value comes from.
                  key: MYSQL_ENV_DB_USER # The key to fetch.
          restartPolicy: OnFailure